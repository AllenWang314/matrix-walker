{"version":3,"sources":["Selector.js","MatrixWalker.js","Help.js","App.js","reportWebVitals.js","index.js"],"names":["options","key","text","value","Selector","props","Dropdown","placeholder","selection","onChange","_","data","selected","getRandomInt","max","Math","floor","random","interleave_uint16_with_zeros","input","word","MatrixWalker","matrix_size","cache_width","cache_height","n","this","size","n_pw2","ceil","log2","i","j","loc","cache","Cache","move","console","log","translate","access","get_cache_index","width","indices","lru","length","coords","reverse_translate","push","arr","Array","fill","get_indices_in_cache","cache_accesses","height","cache_hits","NaiveWalker","ZWalker","y","n_str","toString","pow","k","parseInt","slice","HilbertWalker","base_case","ret","mask","quadrant","i_arr","j_arr","idx","charAt","i_mat","j_mat","i_cur","j_cur","cache_misses","line","includes","splice","indexOf","unshift","pop","Help","React","useState","open","setOpen","Modal","onClose","onOpen","trigger","Button","color","Header","Content","href","Actions","onClick","App","leftMatrix","setLeftMatrix","rightMatrix","setRightMatrix","Date","lastUpdated","setLastUpdated","naive","zindex","hilbert","x","setX","setY","useEffect","window","addEventListener","keyDownListener","removeEventListener","event","up","down","left","right","side","getLeftData","get_cache_visual","getRightData","className","id","PixelGrid","padding","background","get_cache_stats","Form","onSubmit","teleport","Group","widths","fluid","search","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2963efbf.chunk.js","sourcesContent":["import React from \"react\";\nimport { Dropdown } from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nconst options = [{\n  key: 0,\n  text: 'Row-major Indexing',\n  value: 0,\n},\n{\n  key: 1,\n  text: 'Z Indexing',\n  value: 1,\n},\n{\n  key: 2,\n  text: 'Hilbert Indexing',\n  value: 2,\n}]\n\n/**\n * dropdown selector for matrix selection\n * @param {*} props \n */\nconst Selector = (props) => {\n  return <Dropdown \n    placeholder='Select Matrix' \n    selection\n    options={options} \n    onChange={(_, data) => {props.selected(data.value);}}/>\n}\n\nexport default Selector","\n/**\n * \n * @param {maximum random int exclusive} max \n * @returns a random integer from 0 to max exclusive\n */\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n}\n\n/**\n * \n * @param {*} n \n * @returns the next power of 2 greater than or equal to n\n */\nfunction next_pow_2(n) {\n    return Math.floor(2**(Math.ceil(Math.log2(n))))\n}\n\n/**\n * \n * @param {*} input \n * @returns interleaving the binary representation of input with 0\n */\nfunction interleave_uint16_with_zeros(input) {\n    var word = input\n    word = (word ^ (word << 16)) & 0x0000ffff\n    word = (word ^ (word << 8 )) & 0x00ff00ff\n    word = (word ^ (word << 4 )) & 0x0f0f0f0f\n    word = (word ^ (word << 2 )) & 0x33333333\n    word = (word ^ (word << 1 )) & 0x55555555\n    return word\n}\n\n/**\n * interleaves two uint16 numbers x and y together by \n * using every other digit from their binary representations\n * @param {*} x \n * @param {*} y \n * @returns result of interleaving\n */\nfunction interleave(x, y) {\n    return interleave_uint16_with_zeros(x) \n  | (interleave_uint16_with_zeros(y) << 1);\n}\n\n/**\n * implmentation of abstract matrix walker class\n */\nclass MatrixWalker {\n\n    /**\n     * constructus Matrix Walker with initial pointer at 0,0\n     * creates a new cache associated witht the Matrix Walker with width cache_width and height cache_height\n     * @param {side length of the matrix} matrix_size \n     * @param {width of the cache} cache_width \n     * @param {height of the cache} cache_height \n     */\n    constructor(matrix_size, cache_width, cache_height) {\n        this.size = matrix_size\n        this.n_pw2 = next_pow_2(matrix_size)\n        this.i = 0\n        this.j = 0\n        this.loc = 0\n        this.cache = new Cache(cache_width, cache_height)\n        this.move(0,0)\n    }\n\n    // moves the pointer to the entry on the ith row and jth column\n    move(i, j) {\n        if (i < 0 || i >= this.size || j < 0 || j >= this.size){\n            console.log(\"attempted to move out of bounds\")\n        } else {\n            this.i = i\n            this.j = j\n            this.loc = this.translate(i, j)\n            this.cache.access(this.get_cache_index(i, j)) // accesses the index of the cache block\n        }\n    }\n\n    // randomly teleport to a square in the matrix\n    random_teleport(){\n        this.move(getRandomInt(this.size), getRandomInt(this.size))\n    }\n\n    // teleport to square in the ith row and jth column\n    teleport(i, j){\n        this.move(i,j)\n    }\n\n    // moves pointer to the left\n    left() {\n        this.move(this.i, this.j - 1)\n    }\n\n    // moves pointer to the right\n    right() {\n        this.move(this.i, this.j + 1)\n    }\n\n    // moves pointer up\n    up() {\n        this.move(this.i - 1, this.j)\n    }\n\n    // moves pointer down\n    down() {\n        this.move(this.i + 1, this.j)\n    }\n\n    // gets the index of the cache block for square in the ith row jth column\n    get_cache_index(i, j) {\n        return Math.floor(this.translate(i, j) / this.cache.width)\n    }\n\n    // gets all the indices of squares that reside in the cache\n    get_indices_in_cache() {\n        var indices = []\n        for (var i = 0; i < this.cache.lru.length; i++) {\n            for (var j = 0; j < this.cache.width; j++) {\n                var coords = this.reverse_translate(this.cache.lru[i] * this.cache.width + j)\n                indices.push(coords[0] * this.size + coords[1])\n            }\n        }\n        return indices\n    }\n\n    /*\n    //gets the desired array to be displayed in App.js\n    // all entries in the cache are set to 0.5\n    // the current entry whose pointer is store is set to 0\n    */\n    get_cache_visual() {\n        var arr = Array(this.size * this.size).fill(1)\n        var indices = this.get_indices_in_cache();\n        for (var i = 0; i < indices.length; i++) {\n            arr[indices[i]] = 0.5\n        }\n        arr[this.i * this.size + this.j] = 0\n        return arr\n    }\n\n    /**\n     * \n     * returns a simple div summarizing cache hits and misses\n     */\n    get_cache_stats() {\n        if (this.cache.cache_accesses === 0) {\n            return (\n                <div>\n                    <div>\n                        Cache of width {this.cache.width} and height {this.cache.height}\n                    </div>\n                    <div>\n                        Total of {this.cache.cache_accesses} cache accesses and {this.cache.cache_hits} cache hits\n                    </div>\n                    <div>\n                        Cache hit percentage: N/A\n                    </div>\n                </div>\n            )\n        }\n        return (\n            <div>\n                <div>\n                    Cache of width {this.cache.width} and height {this.cache.height}\n                </div>\n                <div>\n                    Total of {this.cache.cache_accesses} cache accesses and {this.cache.cache_hits} cache hits\n                </div>\n                <div>\n                    Cache hit percentage: {this.cache.cache_hits/this.cache.cache_accesses}\n                </div>\n            </div>\n        )\n    }\n}\n\n/**\n * implementation of naive row major order matrix walker\n */\nclass NaiveWalker extends MatrixWalker {\n\n    // translate method translates from row i and col j location to the index in the underlying stored array\n    translate(i, j) {\n        return this.size * i + j\n    }\n\n    // the inverse of translate\n    reverse_translate(n) {\n        var i = Math.floor(n / this.size)\n        return [i, n - this.size * i]\n    }\n}\n\n/**\n * implementation of z order matrix walker\n */\nclass ZWalker extends MatrixWalker {\n\n    // translate method translates from row i and col j location to the index in the underlying stored array\n    translate(i, j) {\n        return interleave(j, i);\n    }\n\n    // the inverse of translate\n    reverse_translate(n) {\n        var n_str = (n).toString(2)\n        if (n_str.length % 2 !== 0) n_str = \"0\" + n_str\n        var pow = 1\n        var i = 0\n        var j = 0\n        for (var k = 0; k < n_str.length/2; k++) {\n            i += pow * parseInt(n_str.slice(n_str.length - 1 - 2*k - 1, n_str.length - 1 - 2*k)) \n            j += pow * parseInt(n_str.slice(n_str.length - 1 - 2*k, n_str.length - 2*k))\n            pow *= 2\n        }\n        return [i,j]\n    }\n}\n\n/**\n * implementation of hilbert order matrix walker\n */\nclass HilbertWalker extends MatrixWalker {\n\n    // translate method translates from row i and col j location to the index in the underlying stored array\n    translate(i, j) {\n        var base_case = [0, 1, 3, 2]\n        var ret = 0\n        for (var mask = this.n_pw2 / 2; mask >= 1; mask /= 2) {\n            var quadrant = (((i & mask) === mask) << 1) + ((j & mask) === mask)\n            ret += base_case[quadrant]\n            i &= mask - 1\n            j &= mask - 1\n            if (quadrant === 0) {\n                [i, j] = [j, i]\n            } \n            else if (quadrant === 2) {\n                [i, j] = [mask - 1 - j, mask - 1 - i]\n            }\n            if (mask > 1) {\n                ret <<= 2\n            }\n        }\n        return ret\n    }\n\n    // the inverse of translate\n    reverse_translate(n) {\n        // n: a positive int less than size of this.arr\n        var n_str = (this.n_pw2**2 + n).toString(2).slice(1)\n        // un-interleave n\n        var i_arr = ''\n        var j_arr = ''\n        for (var idx = 0; idx < n_str.length; idx += 2) {\n            i_arr += n_str.charAt(idx)\n            j_arr += n_str.charAt(idx + 1)\n        }\n        i_arr = parseInt(i_arr, 2)\n        j_arr = parseInt(j_arr, 2)\n        // start from innermost recursion (least significant bit)\n        var i_mat = 0\n        var j_mat = 0\n        for (var mask = 1; mask < this.n_pw2; mask *= 2) {\n            var i_cur = ((i_arr & mask) === mask)\n            var j_cur = i_cur ^ ((j_arr & mask) === mask)\n            var quadrant = (i_cur << 1) + (j_cur)\n            if (mask > 1) {\n                if (quadrant === 0) {\n                    [i_mat, j_mat] = [j_mat, i_mat]\n                } \n                else if (quadrant === 2) {\n                    [i_mat, j_mat] = [mask - 1 - j_mat, mask - 1 - i_mat]\n                }\n            }\n            i_mat += i_cur * mask\n            j_mat += j_cur * mask\n        }\n        return [i_mat, j_mat]\n    }\n}\n\n\n/**\n * class representing a LRU cache\n */\nclass Cache {\n\n    constructor(width, height){\n        this.width = width\n        this.height = height\n        this.lru = []\n        this.cache_accesses = 0\n        this.cache_hits = 0\n        this.cache_misses = 0\n    }\n\n    /**\n     * simulates accessing a cache line in a LRU cache\n     * @param {cache line index} line \n     */\n    access(line) {\n        if (this.lru.includes(line)) { // line resident in cache\n            this.cache_accesses++\n            this.cache_hits++\n            this.lru.splice(this.lru.indexOf(line), 1);\n            this.lru.unshift(line)\n        }\n        else if (this.lru.length >= this.height) { // capacity miss\n            this.cache_accesses++\n            this.cache_misses++\n            this.lru.pop()\n            this.lru.unshift(line)\n        }\n        else { // cold miss\n            this.cache_accesses++\n            this.cache_misses++\n            this.lru.unshift(line)\n        }\n    }\n\n    /**\n     * logs basic cache statistics for hits and misses\n     */\n    stats() {\n        console.log(`Cache of width ${this.width} and height ${this.height}`)\n        console.log(`Total of ${this.cache_accesses} cache accesses and ${this.cache_hits} cache hits`)\n        if (this.cache_accesses === 0) {\n            console.log(\"No cache accesses\")\n        }\n        else {\n            console.log(`Cache hit percentage: ${this.cache_hits/this.cache_accesses}`)\n        }\n    }\n}\n\nexport {NaiveWalker, ZWalker, HilbertWalker};","import React from 'react'\nimport { Button, Modal } from 'semantic-ui-react'\n\n/**\n * \n * help modal for app\n */\nfunction Help() {\n  const [open, setOpen] = React.useState(false)\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={<Button color='blue' >Help</Button>}\n    >\n      <Modal.Header>Help</Modal.Header>\n      <Modal.Content>\n\n      <h2>What is being displayed</h2>\n\n        <p> On both sides, the entries of a 32 by 32 matrix are displayed in row major order. The black square is the current entry being accessed in the array. The grayed squares are the entries that reside in a cache with width 8 and height 8 using a LRU policy. There are three different indexing designs that can be chosen: row-major indexing, z indexing, and hilbert indexing. Row-major indexing stores the entries of the array behind the scenes in a row major order, z indexing does so using a z-order curve, and Hilbert indexing uses a pseudo Hilbert curve. Finally, below each array, some basic statistics regarding cache hits and misses are shown.</p>\n\n      <h2>Usage</h2>\n      <ul>\n          <li>Use the dropdowns on the two sides of the page to select the type of indexing </li>\n          <li>Use the teleport UI in the center to teleport the pointer of all matrices to any entry of the array</li>\n          <li>Use WASD to move the pointer through the array</li>\n        </ul>\n\n      <h2>More information!</h2>\n      <p>\n        For more information and results, tests on an EC2, and implementations in python checkout the repo <a href=\"https://github.com/AllenWang314/matrix-walker\">here</a>.\n      </p>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color='blue' onClick={() => setOpen(false)}>\n          Close\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  )\n}\n\nexport default Help","import PixelGrid from \"react-pixel-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport Selector from './Selector.js';\nimport './App.css';\nimport { NaiveWalker, ZWalker, HilbertWalker } from './MatrixWalker';\nimport { Dropdown, Form } from 'semantic-ui-react';\nimport Help from './Help.js'\n\n// constants \nconst NAIVE = 0;\nconst ZINDEX = 1;\nconst HILBERT = 2;\n\n// options for dropdown select for teleportation coordinates\nconst options = [\n  { key: 0, value: 0, text: 0 },\n  { key: 1, value: 1, text: 1 },\n  { key: 2, value: 2, text: 2 },\n  { key: 3, value: 3, text: 3 },\n  { key: 4, value: 4, text: 4 },\n  { key: 5, value: 5, text: 5 },\n  { key: 6, value: 6, text: 6 },\n  { key: 7, value: 7, text: 7 },\n  { key: 8, value: 8, text: 8 },\n  { key: 9, value: 9, text: 9 },\n  { key: 10, value: 10, text: 10 },\n  { key: 11, value: 11, text: 11 },\n  { key: 12, value: 12, text: 12 },\n  { key: 13, value: 13, text: 13 },\n  { key: 14, value: 14, text: 14 },\n  { key: 15, value: 15, text: 15 },\n  { key: 16, value: 16, text: 16 },\n  { key: 17, value: 17, text: 17 },\n  { key: 18, value: 18, text: 18 },\n  { key: 19, value: 19, text: 19 },\n  { key: 20, value: 20, text: 20 },\n  { key: 21, value: 21, text: 21 },\n  { key: 22, value: 22, text: 22 },\n  { key: 23, value: 23, text: 23 },\n  { key: 24, value: 24, text: 24 },\n  { key: 25, value: 25, text: 25 },\n  { key: 26, value: 26, text: 26 },\n  { key: 27, value: 27, text: 27 },\n  { key: 28, value: 28, text: 28 },\n  { key: 29, value: 29, text: 29 },\n  { key: 30, value: 30, text: 30 },\n  { key: 31, value: 31, text: 31 },\n]\n\n/**\n * \n * main app for matrix walker\n */\nfunction App() {\n  const [size] = useState(32); // matrix width\n  const [leftMatrix, setLeftMatrix] = useState(-1); // selected left matrix\n  const [rightMatrix, setRightMatrix] = useState(-1); // selected right matrix\n  const [lastUpdated, setLastUpdated] = useState(new Date()); // timestamp of last update\n  const [naive] = useState(new NaiveWalker(size, 8, 8)); // reference to naive row-major ordering matirx\n  const [zindex] = useState(new ZWalker(size, 8, 8)); // reference to zindex ordering matrix\n  const [hilbert] = useState(new HilbertWalker(size, 8, 8)); // reference to hilbert matrix\n  const [x, setX] = useState(0); // row selected in teleportation UI\n  const [y, setY] = useState(0); // col selected in teleportation UI\n\n  // Bind key listeners\n  useEffect(() => {\n    window.addEventListener('keydown', keyDownListener);\n    return () => window.removeEventListener('keydown', keyDownListener);\n  }, [lastUpdated]);\n\n  // keydown listener for WASD controls\n  const keyDownListener = (event) => {\n    if (event.key === \"w\") {\n      naive.up()\n      zindex.up()\n      hilbert.up()\n    }\n    if (event.key === \"s\") {\n      naive.down()\n      zindex.down()\n      hilbert.down()\n    }\n    if (event.key === \"a\") {\n      naive.left()\n      zindex.left()\n      hilbert.left()\n    }\n    if (event.key === \"d\") {\n      naive.right()\n      zindex.right()\n      hilbert.right()\n    }\n    // setting this state forces rerendering\n    setLastUpdated(new Date())\n  }\n\n  // selector for matrices, side is true for left, false for right\n  // value takes on NAIVE, ZINDEX, or HILBERT\n  const selected = (side, value) => {\n    if (side) {\n      setLeftMatrix(value);\n    }\n    else {\n      setRightMatrix(value);\n    }\n  }\n\n  // gets the array with values for the left side of page\n  function getLeftData() {\n    if (leftMatrix === NAIVE) {\n      return naive.get_cache_visual();\n    } else if (leftMatrix === ZINDEX) {\n      return zindex.get_cache_visual();\n    } else if (leftMatrix === HILBERT) {\n      return hilbert.get_cache_visual();\n    }\n    return null\n  }\n\n  // gets the statistics for the left side of page\n  function getLeftStats() {\n    if (leftMatrix === NAIVE) {\n      return naive.get_cache_stats();\n    } else if (leftMatrix === ZINDEX) {\n      return zindex.get_cache_stats();\n    } else if (leftMatrix === HILBERT) {\n      return hilbert.get_cache_stats();\n    }\n    return null\n  }\n\n  // gets the array with vallues for the right side of page\n  function getRightData() {\n    if (rightMatrix === NAIVE) {\n      return (naive.get_cache_visual());\n    } else if (rightMatrix === ZINDEX) {\n      return (zindex.get_cache_visual());\n    } else if (rightMatrix === HILBERT) {\n      return (hilbert.get_cache_visual());\n    }\n    return null\n  }\n\n  // gets the statistics for the right side of page\n  function getRightStats() {\n    if (rightMatrix === NAIVE) {\n      return naive.get_cache_stats();\n    } else if (rightMatrix === ZINDEX) {\n      return zindex.get_cache_stats();\n    } else if (rightMatrix === HILBERT) {\n      return hilbert.get_cache_stats();\n    }\n    return null\n  }\n\n  // change listener for X value for the dropdown\n  function onChangeX(event, {value}) {\n    setX(value)\n  }\n\n  // change listener for Y value for the dropdown\n  function onChangeY(event, {value}) {\n    setY(value)\n  }\n\n  // handler for form submission for teleportation\n  function onSubmitForm(event) {\n    naive.teleport(x, y)\n    zindex.teleport(x, y)\n    hilbert.teleport(x, y)\n    setLastUpdated(new Date())\n  }\n\n  return (\n    <div className=\"App\">\n      <div id=\"help-modal\"><Help /></div>\n      <h1>Matrix Walker Cache Visualization</h1>\n      <div className=\"content\">\n        <div className=\"matrix-display\" id=\"left-matrix\">\n          <Selector selected={(value) => { selected(true, value) }} />\n          <div className=\"pixel-grid\">\n            {(getLeftData() === null) ? <div></div> : <PixelGrid\n              data={getLeftData()}\n              options={{\n                size: 450 / size,\n                padding: 0.5,\n                background: [0, 0.5, 1],\n              }}\n            />}\n          </div>\n          <div className=\"cache-stats\">\n            {getLeftStats()}\n          </div>\n        </div>\n        <div id=\"teleport-ui\">\n          <h3>Teleport</h3>\n          <Form onSubmit={onSubmitForm}>\n            <Form.Group widths='equal'>\n              <Dropdown\n                placeholder='Row'\n                fluid\n                search\n                selection\n                options={options}\n                className=\"teleport-dropdown\"\n                onChange={onChangeX}\n              />\n              <Dropdown\n                placeholder='Col'\n                fluid\n                search\n                selection\n                options={options}\n                className=\"teleport-dropdown\"\n                onChange={onChangeY}\n              />\n            </Form.Group>\n            <Form.Button color='blue' >Submit</Form.Button>\n          </Form>\n        </div>\n        <div className=\"matrix-display\" id=\"right-matrix\">\n          <Selector selected={(value) => { selected(false, value) }} />\n          <div className=\"pixel-grid\">\n            {(getRightData() === null) ? <div></div> : <PixelGrid\n              data={getRightData()}\n              options={{\n                size: 450 / size,\n                padding: 0.5,\n                background: [0, 0.5, 1],\n              }}\n            />}\n          </div>\n          <div className=\"cache-stats\">\n            {getRightStats()}\n          </div>\n        </div>\n      </div>\n      <div className=\"footer\">\n        Made with ❤️ by AllenWang314 and quadraticmuffins, with help from the 6.851 staff\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}